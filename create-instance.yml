---
- name: Create instance
  hosts: localhost
  gather_facts: false
  connection: local
  vars:
    gcp_project: round-plating-286915
    gcp_cred_kind: serviceaccount
    gcp_cred_file: /Users/michaelschmidt/git/kiratech-techchallenge/round-plating-286915-49944854916b.json
    zone: "us-central1-b"
    region: "us-central1"
    image: "projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts"
  tasks:
    - name: create a disk
      gcp_compute_disk:
        name: 'disk-instance'
        size_gb: 10
        source_image: "{{ image }}"
        zone: "{{ zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes:
          - https://www.googleapis.com/auth/compute
        state: present
      register: disk
    - name: create network
      gcp_compute_network:
        name: 'default'
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes:
          - https://www.googleapis.com/auth/compute
        state: present
      register: network
    - name: create a address
      gcp_compute_address:
        name: 'address-instance'
        region: "{{ region }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes:
          - https://www.googleapis.com/auth/compute
        state: present
      register: address
    - name: open firewall
      gcp_compute_firewall:
        name: docker-port
        allowed:
        - ip_protocol: tcp
          ports:
          - '2375'
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
    - name: create instance
      gcp_compute_instance:
        state: present
        name: test-vm-1
        machine_type: f1-micro
        disks:
          - auto_delete: true
            boot: true
            source: "{{ disk }}"
        network_interfaces:
          - network: "{{ network }}"
            access_configs:
              - name: 'External NAT'
                nat_ip: "{{ address }}"
                type: 'ONE_TO_ONE_NAT'
        zone: "{{ zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        scopes:
          - https://www.googleapis.com/auth/compute
      register: instance
    - name: Wait for SSH to come up
      wait_for: host={{ address.address }} port=22 delay=10 timeout=60
    - name: Add host to groupname
      add_host: hostname={{ address.address }} groupname=new_instances
    - set_fact:
        host_ip: "{{ address.address }}"
#    - name: Give them the key
      #connection: ssh
#      authorized_key:
#        user: michaelschmidt
#        state: present
#        key: "{{ lookup('file', '/Users/michaelschmidt/git/kiratech-techchallenge/id_rsa.pub') }}"

- name: install software
  hosts: new_instances
  role:
    - docker
  become: true
  connection: ssh

    - name: Init a new swarm with default parameters
      docker_swarm:
        state: present
        advertise_addr: "{{ hostvars['localhost']['host_ip'] }}"
      register: swarm
    - set_fact:
        register_key: "{{ swarm.swarm_facts.JoinTokens.Worker }}"
    - debug:       
        msg: "{{ register_key }}"

